import React from 'react'
import { useNavigate } from 'react-router-dom'
import { GraduationCap, Users, BookOpen, Calendar, Award, BarChart3, Shield, CheckCircle, ArrowRight } from 'lucide-react'
import Button from '../components/Button'
import Card from '../components/Card'
import { useAuth } from '../contexts/AuthContext'
import { usePublicNotices } from '../services/queries'

// Add marquee animation styles
const marqueeStyle = `
  @keyframes marquee {
    0% { transform: translateX(100%); }
    100% { transform: translateX(-100%); }
  }
`

const LandingPage = () => {
  const navigate = useNavigate()
  const { user, isAuthenticated } = useAuth()
  const { data: notices } = usePublicNotices()

  // Filter notices that should show on landing page
  const landingNotices = notices?.filter(notice => 
    notice.show_on_landing && 
    notice.is_active &&
    (!notice.expires_at || new Date(notice.expires_at) > new Date())
  ) || []

  // Fallback Bengali notices if no landing notices are available
  const fallbackNotices = [
    // "ЁЯОЙ ржирждрзБржи ржмрзНржпрж╛ржЪ рж╢рзБрж░рзБ рж╣ржмрзЗ рззрзл ржЕржХрзНржЯрзЛржмрж░ ржерзЗржХрзЗ - рж╕рзАржорж┐ржд ржЖрж╕ржи!",
    "ЁЯУЪ HSC рзирзжрзирзм ржмрзНржпрж╛ржЪрзЗрж░ ржнрж░рзНрждрж┐ ржЪрж▓ржЫрзЗ - ржмрж┐рж╢рзЗрж╖ ржЫрж╛ржбрж╝рзЗ!",
    // "ЁЯПЖ ржЖржорж╛ржжрзЗрж░ рзлрзж+ рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзА ржПржмржЫрж░ A+ ржкрзЗржпрж╝рзЗржЫрзЗ!",
    // "ЁЯУЭ ржмрж┐ржирж╛ржорзВрж▓рзНржпрзЗ ржоржбрзЗрж▓ ржЯрзЗрж╕рзНржЯ ржкрзНрж░рждрж┐ рж╢ржирж┐ржмрж╛рж░",
    // "ЁЯОп ржЧржгрж┐ржд ржУ ржкржжрж╛рж░рзНржержмрж┐ржЬрзНржЮрж╛ржирзЗ ржмрж┐рж╢рзЗрж╖ ржХрзНрж▓рж╛рж╕ рж╢рзБрж░рзБ"
  ]

  // Use landing notices if available, otherwise use fallback
  const displayNotices = landingNotices.length > 0 ? landingNotices : fallbackNotices

  const features = [
    {
      icon: <BookOpen className="h-6 w-6" />,
      title: "ржмрж┐рж╖ржпрж╝ржнрж┐рждрзНрждрж┐ржХ ржХрзЛржЪрж┐ржВ",
      description: "ржЧржгрж┐ржд, ржкржжрж╛рж░рзНрже, рж░рж╕рж╛ржпрж╝ржи, ржЬрзАржмржмрж┐ржЬрзНржЮрж╛ржи ржПржмржВ ржЗржВрж░рзЗржЬрж┐рждрзЗ ржмрж┐рж╢рзЗрж╖ржЬрзНржЮ рж╢рж┐ржХрзНрж╖ржХ"
    },
    {
      icon: <Users className="h-6 w-6" />,
      title: "ржЫрзЛржЯ ржмрзНржпрж╛ржЪ рж╕рж╛ржЗржЬ",
      description: "ржкрзНрж░рждрж┐ ржмрзНржпрж╛ржЪрзЗ рж╕рж░рзНржмрзЛржЪрзНржЪ рззрзл ржЬржи рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзА - ржмрзНржпржХрзНрждрж┐ржЧржд ржоржирзЛржпрзЛржЧрзЗрж░ ржЬржирзНржп"
    },
    {
      icon: <Calendar className="h-6 w-6" />,
      title: "ржирж┐ржпрж╝ржорж┐ржд ржкрж░рзАржХрзНрж╖рж╛",
      description: "рж╕рж╛ржкрзНрждрж╛рж╣рж┐ржХ ржкрж░рзАржХрзНрж╖рж╛ ржПржмржВ ржорж╛рж╕рж┐ржХ ржорзВрж▓рзНржпрж╛ржпрж╝ржирзЗрж░ ржорж╛ржзрзНржпржорзЗ ржЕржЧрзНрж░ржЧрждрж┐ ржкрж░рзНржпржмрзЗржХрзНрж╖ржг"
    },
    {
      icon: <Award className="h-6 w-6" />,
      title: "ржмрзЛрж░рзНржб ржкрж░рзАржХрзНрж╖рж╛рж░ ржкрзНрж░рж╕рзНрждрзБрждрж┐",
      description: "JSC, SSC ржПржмржВ HSC ржкрж░рзАржХрзНрж╖рж╛рж░ ржЬржирзНржп ржмрж┐рж╢рзЗрж╖ ржкрзНрж░рж╕рзНрждрзБрждрж┐ржорзВрж▓ржХ ржХрзНрж▓рж╛рж╕"
    },
    {
      icon: <BarChart3 className="h-6 w-6" />,
      title: "ржлрж▓рж╛ржлрж▓ ржЯрзНрж░рзНржпрж╛ржХрж┐ржВ",
      description: "ржкрзНрж░рждрж┐ржЯрж┐ рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзАрж░ ржЕржЧрзНрж░ржЧрждрж┐ рж░рж┐ржкрзЛрж░рзНржЯ ржПржмржВ ржЕржнрж┐ржнрж╛ржмржХ ржорж┐ржЯрж┐ржВ"
    },
    {
      icon: <Shield className="h-6 w-6" />,
      title: "ржЕржнрж┐ржЬрзНржЮ рж╢рж┐ржХрзНрж╖ржХржоржгрзНржбрж▓рзА",
      description: "рж╕рзНржерж╛ржирзАржпрж╝ рж╕рзНржХрзБрж▓-ржХрж▓рзЗржЬрзЗрж░ ржЕржнрж┐ржЬрзНржЮ ржПржмржВ ржпрзЛржЧрзНржп рж╢рж┐ржХрзНрж╖ржХржжрзЗрж░ рждрждрзНрждрзНржмрж╛ржмржзрж╛ржи"
    }
  ]

  const testimonials = [
    {
      name: "ржирж╛рж╣рж┐ржжрж╛ ржЦрж╛рждрзБржи",
      role: "ржЕржнрж┐ржнрж╛ржмржХ, ржорзАрж░рж╕рж░рж╛ржЗ",
      content: "ржЖржорж╛рж░ ржорзЗржпрж╝рзЗ рзпржо рж╢рзНрж░рзЗржгрзАрждрзЗ ржкржбрж╝рзЗред рж╕рж╛ржпрж╝рзЗржирзНрж╕ ржкржпрж╝рзЗржирзНржЯрзЗ ржЖрж╕рж╛рж░ ржкрж░ рждрж╛рж░ ржЧржгрж┐рждрзЗ ржЕржирзЗржХ ржЙржирзНржирждрж┐ рж╣ржпрж╝рзЗржЫрзЗред рж╢рж┐ржХрзНрж╖ржХрж░рж╛ ржЦрзБржмржЗ ржпрждрзНржирж╢рзАрж▓ред"
    },
    {
      name: "рж░рж╛рж╣рзБрж▓ ржЪрж╛ржХржорж╛",
      role: "HSC ржмрзНржпрж╛ржЪ рзирзжрзирзк - ржЪржЯрзНржЯржЧрзНрж░рж╛ржо ржХрж▓рзЗржЬ",
      content: "рж╕рж╛ржпрж╝рзЗржирзНрж╕ ржкржпрж╝рзЗржирзНржЯрзЗрж░ ржкржжрж╛рж░рзНржержмрж┐ржЬрзНржЮрж╛ржи ржХрзНрж▓рж╛рж╕ ржЖржорж╛рж░ HSC рждрзЗ A+ ржкрзЗрждрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рзЗржЫрзЗред ржзржирзНржпржмрж╛ржж рж╕рзНржпрж╛рж░ржжрзЗрж░!"
    },
    {
      name: "ржорзЛржГ ржЬрж╛рж╣рж╛ржЩрзНржЧрзАрж░ ржЖрж▓ржо",
      role: "ржЕржнрж┐ржнрж╛ржмржХ ржУ рж╕рзНржерж╛ржирзАржпрж╝ ржмрзНржпржмрж╕рж╛ржпрж╝рзА",
      content: "ржЖржорж╛рж░ ржЫрзЗрж▓рзЗ рзоржо рж╢рзНрж░рзЗржгрзАрждрзЗ ржкржбрж╝рзЗред ржПржЦрж╛ржирзЗ ржЫрзЛржЯ ржмрзНржпрж╛ржЪ рж╕рж╛ржЗржЬрзЗрж░ ржХрж╛рж░ржгрзЗ ржкрзНрж░рждрж┐ржЯрж┐ ржмрж╛ржЪрзНржЪрж╛рж░ ржкрзНрж░рждрж┐ ржЖрж▓рж╛ржжрж╛ ржоржирзЛржпрзЛржЧ ржжрзЗржУржпрж╝рж╛ рж╣ржпрж╝ред"
    }
  ]

  return (
    <>
      <style>{marqueeStyle}</style>
      <div className="min-h-screen bg-gradient-to-br from-slate-50 via-white to-gray-50">
      {/* Latest Notices Marquee */}
      <div className="bg-slate-600 text-white py-2 overflow-hidden">
        <div className="flex items-center">
          <span className="bg-red-600 px-3 py-1 text-xs font-bold rounded-r-full flex-shrink-0">
            ЁЯУв рж╕рж░рзНржмрж╢рзЗрж╖ ржШрзЛрж╖ржгрж╛
          </span>
          <div className="ml-4 flex-1 overflow-hidden">
            <div className="whitespace-nowrap" style={{
              animation: 'marquee 30s linear infinite'
            }}>
              {displayNotices.map((notice, index) => (
                <span key={notice.id || index} className="mx-8">
                  тЬи {typeof notice === 'string' ? notice : notice.content}
                </span>
              ))}
            </div>
          </div>
        </div>
      </div>

      {/* Header */}
      <header className="bg-white/80 backdrop-blur-md border-b border-gray-200 sticky top-0 z-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center py-4">
            <div className="flex items-center space-x-2">
              <GraduationCap className="h-8 w-8 text-slate-600" />
              <span className="text-xl font-bold text-gray-900">Science Point</span>
            </div>
            <div className="flex items-center space-x-4">
              {isAuthenticated ? (
                <div className="flex items-center space-x-4">
                  <span className="text-sm text-gray-600">
                    Welcome back, <span className="font-semibold">{user?.full_name || user?.username}</span>
                  </span>
                  <Button 
                    onClick={() => {
                      const roleRoutes = {
                        admin: '/admin-dashboard',
                        teacher: '/teacher',
                        student: '/student'
                      }
                      navigate(roleRoutes[user?.role] || '/login')
                    }}
                  >
                    Go to Dashboard
                  </Button>
                </div>
              ) : (
                <>
                  <Button variant="outline" onClick={() => navigate('/login')}>
                    Sign In
                  </Button>
                  <Button onClick={() => navigate('/login')}>
                    Get Started
                  </Button>
                </>
              )}
            </div>
          </div>
        </div>
      </header>

      {/* Hero Section */}
      <section className="py-20 px-4 sm:px-6 lg:px-8">
        <div className="max-w-7xl mx-auto text-center">
          <div className="mb-6">
            <p className="text-lg text-slate-600 font-semibold mb-2">ржорзАрж░рж╕рж░рж╛ржЗ, ржЪржЯрзНржЯржЧрзНрж░рж╛ржо</p>
            <h1 className="text-4xl sm:text-5xl lg:text-6xl font-bold text-gray-900 mb-6">
              <span className="text-slate-700">рж╕рж╛ржпрж╝рзЗржирзНрж╕ ржкржпрж╝рзЗржирзНржЯ</span>
              <span className="block text-3xl sm:text-4xl lg:text-5xl mt-2">ржХрзЛржЪрж┐ржВ рж╕рзЗржирзНржЯрж╛рж░</span>
            </h1>
          </div>
          <div className="bg-white/80 backdrop-blur-sm rounded-2xl p-8 shadow-lg max-w-4xl mx-auto mb-8">
            <p className="text-xl text-gray-700 mb-6">
              <span className="font-semibold text-slate-600">рзмрж╖рзНржа ржерзЗржХрзЗ рззрзжржо рж╢рзНрж░рзЗржгрзА</span> (ржорж╛ржзрзНржпржорж┐ржХ) ржПржмржВ 
              <span className="font-semibold text-slate-600"> рззрззрж╢ ржерзЗржХрзЗ рззрзирж╢ рж╢рзНрж░рзЗржгрзА</span> (ржЙржЪрзНржЪ ржорж╛ржзрзНржпржорж┐ржХ) рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзАржжрзЗрж░ ржЬржирзНржп
            </p>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6 text-center mb-8">
              <div className="bg-slate-50 p-4 rounded-lg">
                <h3 className="font-bold text-slate-700">ржЧржгрж┐ржд ржУ ржмрж┐ржЬрзНржЮрж╛ржи</h3>
                <p className="text-sm text-slate-500">ржмрж┐рж╢рзЗрж╖ржЬрзНржЮ рж╢рж┐ржХрзНрж╖ржХ</p>
              </div>
              <div className="bg-slate-50 p-4 rounded-lg">
                <h3 className="font-bold text-slate-700">ржмрзЛрж░рзНржб ржкрж░рзАржХрзНрж╖рж╛рж░ ржкрзНрж░рж╕рзНрждрзБрждрж┐</h3>
                <p className="text-sm text-slate-500">JSC, SSC, HSC</p>
              </div>
              <div className="bg-slate-50 p-4 rounded-lg">
                <h3 className="font-bold text-slate-700">ржЫрзЛржЯ ржмрзНржпрж╛ржЪ рж╕рж╛ржЗржЬ</h3>
                <p className="text-sm text-slate-500">ржмрзНржпржХрзНрждрж┐ржЧржд ржоржирзЛржпрзЛржЧ</p>
              </div>
            </div>
          </div>
          {isAuthenticated ? (
            <div className="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-2xl p-8 shadow-lg max-w-4xl mx-auto mb-8 border border-blue-100">
              <div className="text-center">
                <h3 className="text-2xl font-bold text-gray-900 mb-4">
                  рж╕рзНржмрж╛ржЧрждржо, {user?.full_name || user?.username}! ЁЯОЙ
                </h3>
                <p className="text-lg text-gray-700 mb-6">
                  {user?.role === 'admin' && 'ржЖржкржирж╛рж░ ржПржбржорж┐ржи ржбрзНржпрж╛рж╢ржмрзЛрж░рзНржбрзЗ ржпрзЗрждрзЗ ржирж┐ржЪрзЗрж░ ржмрж╛ржЯржирзЗ ржХрзНрж▓рж┐ржХ ржХрж░рзБржиред'}
                  {user?.role === 'teacher' && 'ржЖржкржирж╛рж░ рж╢рж┐ржХрзНрж╖ржХ ржбрзНржпрж╛рж╢ржмрзЛрж░рзНржбрзЗ ржпрзЗрждрзЗ ржирж┐ржЪрзЗрж░ ржмрж╛ржЯржирзЗ ржХрзНрж▓рж┐ржХ ржХрж░рзБржиред'}
                  {user?.role === 'student' && 'ржЖржкржирж╛рж░ рж╕рзНржЯрзБржбрзЗржирзНржЯ ржбрзНржпрж╛рж╢ржмрзЛрж░рзНржбрзЗ ржпрзЗрждрзЗ ржирж┐ржЪрзЗрж░ ржмрж╛ржЯржирзЗ ржХрзНрж▓рж┐ржХ ржХрж░рзБржиред'}
                </p>
                <Button 
                  size="lg" 
                  className="text-lg px-8 py-4"
                  onClick={() => {
                    const roleRoutes = {
                      admin: '/admin-dashboard',
                      teacher: '/teacher',
                      student: '/student'
                    }
                    navigate(roleRoutes[user?.role] || '/login')
                  }}
                >
                  ржбрзНржпрж╛рж╢ржмрзЛрж░рзНржбрзЗ ржпрж╛ржи
                  <ArrowRight className="h-5 w-5 ml-2" />
                </Button>
              </div>
            </div>
          ) : (
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <Button 
                size="lg" 
                className="text-lg px-8 py-4"
                onClick={() => navigate('/admission')}
              >
                ржнрж░рзНрждрж┐рж░ ржЬржирзНржп ржпрзЛржЧрж╛ржпрзЛржЧ
              </Button>
              <Button 
                variant="outline" 
                size="lg" 
                className="text-lg px-8 py-4"
              >
                ржХрзНрж▓рж╛рж╕рзЗрж░ рждржерзНржп ржжрзЗржЦрзБржи
              </Button>
            </div>
          )}
        </div>
      </section>

      {/* Quick Access Section for Signed-in Users */}
      {isAuthenticated && (
        <section className="py-16 px-4 sm:px-6 lg:px-8 bg-gray-50">
          <div className="max-w-7xl mx-auto">
            <div className="text-center mb-12">
              <h2 className="text-3xl font-bold text-gray-900 mb-4">
                ржжрзНрж░рзБржд ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕
              </h2>
              <p className="text-lg text-gray-600">
                ржЖржкржирж╛рж░ ржкрзНрж░ржпрж╝рзЛржЬржирзАржпрж╝ рждржерзНржп ржПржмржВ рж╕рзЗржмрж╛ ржПржХ ржХрзНрж▓рж┐ржХрзЗржЗ
              </p>
            </div>
            
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {user?.role === 'admin' && (
                <>
                  <Card className="p-6 hover:shadow-lg transition-shadow cursor-pointer" onClick={() => navigate('/admin-dashboard/students')}>
                    <Users className="h-8 w-8 text-blue-600 mb-4" />
                    <h3 className="text-lg font-semibold text-gray-900 mb-2">рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзА ржкрж░рж┐ржЪрж╛рж▓ржирж╛</h3>
                    <p className="text-gray-600 text-sm">ржирждрзБржи ржнрж░рзНрждрж┐, рждржерзНржп ржЖржкржбрзЗржЯ ржПржмржВ ржкрж╛рж░ржлрж░ржорзЗржирзНрж╕ ржЯрзНрж░рзНржпрж╛ржХрж┐ржВ</p>
                  </Card>
                  <Card className="p-6 hover:shadow-lg transition-shadow cursor-pointer" onClick={() => navigate('/admin-dashboard/teachers')}>
                    <Shield className="h-8 w-8 text-green-600 mb-4" />
                    <h3 className="text-lg font-semibold text-gray-900 mb-2">рж╢рж┐ржХрзНрж╖ржХ ржкрж░рж┐ржЪрж╛рж▓ржирж╛</h3>
                    <p className="text-gray-600 text-sm">рж╢рж┐ржХрзНрж╖ржХ рждржерзНржп, ржХрзНрж▓рж╛рж╕ ржмрж░рж╛ржжрзНржж ржПржмржВ ржкрж╛рж░ржлрж░ржорзЗржирзНрж╕ ржкрж░рзНржпржмрзЗржХрзНрж╖ржг</p>
                  </Card>
                  <Card className="p-6 hover:shadow-lg transition-shadow cursor-pointer" onClick={() => navigate('/admin-dashboard/performance')}>
                    <BarChart3 className="h-8 w-8 text-purple-600 mb-4" />
                    <h3 className="text-lg font-semibold text-gray-900 mb-2">ржкрж╛рж░ржлрж░ржорзЗржирзНрж╕ рж░рж┐ржкрзЛрж░рзНржЯ</h3>
                    <p className="text-gray-600 text-sm">рж╕рж╛ржоржЧрзНрж░рж┐ржХ ржкрзНрж░рждрж┐рж╖рзНржарж╛ржирзЗрж░ ржкрж╛рж░ржлрж░ржорзЗржирзНрж╕ ржПржмржВ ржкрж░рж┐рж╕ржВржЦрзНржпрж╛ржи</p>
                  </Card>
                </>
              )}
              
              {user?.role === 'teacher' && (
                <>
                  <Card className="p-6 hover:shadow-lg transition-shadow cursor-pointer" onClick={() => navigate('/teacher/classes')}>
                    <BookOpen className="h-8 w-8 text-blue-600 mb-4" />
                    <h3 className="text-lg font-semibold text-gray-900 mb-2">ржЖржорж╛рж░ ржХрзНрж▓рж╛рж╕рж╕ржорзВрж╣</h3>
                    <p className="text-gray-600 text-sm">ржЖржкржирж╛рж░ ржжрж╛ржпрж╝рж┐рждрзНржмрзЗ ржерж╛ржХрж╛ ржХрзНрж▓рж╛рж╕ ржПржмржВ ржмрж┐рж╖ржпрж╝рж╕ржорзВрж╣</p>
                  </Card>
                  <Card className="p-6 hover:shadow-lg transition-shadow cursor-pointer" onClick={() => navigate('/teacher/attendance')}>
                    <Calendar className="h-8 w-8 text-green-600 mb-4" />
                    <h3 className="text-lg font-semibold text-gray-900 mb-2">ржЙржкрж╕рзНржерж┐рждрж┐ ржирж┐ржпрж╝ржирзНрждрзНрж░ржг</h3>
                    <p className="text-gray-600 text-sm">рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзАржжрзЗрж░ ржжрзИржирж┐ржХ ржЙржкрж╕рзНржерж┐рждрж┐ ржЧрзНрж░рж╣ржг ржУ ржкрж░рзНржпржмрзЗржХрзНрж╖ржг</p>
                  </Card>
                  <Card className="p-6 hover:shadow-lg transition-shadow cursor-pointer" onClick={() => navigate('/teacher/results')}>
                    <Award className="h-8 w-8 text-purple-600 mb-4" />
                    <h3 className="text-lg font-semibold text-gray-900 mb-2">ржкрж░рзАржХрзНрж╖рж╛рж░ ржлрж▓рж╛ржлрж▓</h3>
                    <p className="text-gray-600 text-sm">ржкрж░рзАржХрзНрж╖рж╛рж░ ржиржорзНржмрж░ ржкрзНрж░ржжрж╛ржи ржПржмржВ ржлрж▓рж╛ржлрж▓ ржкрзНрж░ржХрж╛рж╢</p>
                  </Card>
                </>
              )}
              
              {user?.role === 'student' && (
                <>
                  <Card className="p-6 hover:shadow-lg transition-shadow cursor-pointer" onClick={() => navigate('/student/results')}>
                    <Award className="h-8 w-8 text-blue-600 mb-4" />
                    <h3 className="text-lg font-semibold text-gray-900 mb-2">ржЖржорж╛рж░ ржлрж▓рж╛ржлрж▓</h3>
                    <p className="text-gray-600 text-sm">рж╕ржХрж▓ ржкрж░рзАржХрзНрж╖рж╛рж░ ржлрж▓рж╛ржлрж▓ ржПржмржВ ржкрж╛рж░ржлрж░ржорзЗржирзНрж╕ рж░рж┐ржкрзЛрж░рзНржЯ</p>
                  </Card>
                  <Card className="p-6 hover:shadow-lg transition-shadow cursor-pointer" onClick={() => navigate('/student/schedule')}>
                    <Calendar className="h-8 w-8 text-green-600 mb-4" />
                    <h3 className="text-lg font-semibold text-gray-900 mb-2">ржХрзНрж▓рж╛рж╕рзЗрж░ рж╕ржоржпрж╝рж╕рзВржЪрзА</h3>
                    <p className="text-gray-600 text-sm">ржЖржкржирж╛рж░ ржирж┐ржпрж╝ржорж┐ржд ржХрзНрж▓рж╛рж╕рзЗрж░ рж╕ржоржпрж╝ ржПржмржВ ржкрж░рзАржХрзНрж╖рж╛рж░ рждрж╛рж░рж┐ржЦ</p>
                  </Card>
                  <Card className="p-6 hover:shadow-lg transition-shadow cursor-pointer" onClick={() => navigate('/student/materials')}>
                    <BookOpen className="h-8 w-8 text-purple-600 mb-4" />
                    <h3 className="text-lg font-semibold text-gray-900 mb-2">ржЕржзрзНржпржпрж╝ржи рж╕рж╛ржоржЧрзНрж░рзА</h3>
                    <p className="text-gray-600 text-sm">рж╢рж┐ржХрзНрж╖ржХржжрзЗрж░ ржкрзНрж░ржжрж╛ржи ржХрж░рж╛ ржирзЛржЯ ржПржмржВ ржЕржзрзНржпржпрж╝ржи рж╕рж╛ржоржЧрзНрж░рзА</p>
                  </Card>
                </>
              )}
            </div>
          </div>
        </section>
      )}

      {/* Features Section */}
      <section className="py-20 px-4 sm:px-6 lg:px-8 bg-white">
        <div className="max-w-7xl mx-auto">
          <div className="text-center mb-16">
            <h2 className="text-3xl sm:text-4xl font-bold text-gray-900 mb-4">
              ржХрзЗржи рж╕рж╛ржпрж╝рзЗржирзНрж╕ ржкржпрж╝рзЗржирзНржЯ ржмрзЗржЫрзЗ ржирж┐ржмрзЗржи?
            </h2>
            <p className="text-xl text-gray-600 max-w-2xl mx-auto">
              ржорзАрж░рж╕рж░рж╛ржЗржпрж╝рзЗрж░ рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзАржжрзЗрж░ ржЬржирзНржп ржмрж┐рж╢рзЗрж╖ржнрж╛ржмрзЗ ржбрж┐ржЬрж╛ржЗржи ржХрж░рж╛ рж╢рж┐ржХрзНрж╖рж╛ рж╕рзЗржмрж╛
            </p>
          </div>
          
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            {features.map((feature, index) => (
              <Card key={index} className="p-6 hover:shadow-lg transition-shadow">
                <div className="text-slate-600 mb-4">
                  {feature.icon}
                </div>
                <h3 className="text-xl font-semibold text-gray-900 mb-2">
                  {feature.title}
                </h3>
                <p className="text-gray-600">
                  {feature.description}
                </p>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* Class-specific Sections */}
      <section className="py-20 px-4 sm:px-6 lg:px-8 bg-gray-50">
        <div className="max-w-7xl mx-auto">
          <div className="text-center mb-16">
            <h2 className="text-3xl sm:text-4xl font-bold text-gray-900 mb-4">
              ржЖржорж╛ржжрзЗрж░ ржХрзЛрж░рзНрж╕ рж╕ржорзВрж╣
            </h2>
            <p className="text-xl text-gray-600">
              ржкрзНрж░рждрж┐ржЯрж┐ рж╢рзНрж░рзЗржгрзАрж░ ржЬржирзНржп ржмрж┐рж╢рзЗрж╖ржнрж╛ржмрзЗ рждрзИрж░рж┐ ржкрж╛ржарзНржпржХрзНрж░ржо
            </p>
          </div>

          <div className="grid grid-cols-1 lg:grid-cols-2 gap-12 mb-16">
            {/* High School Section */}
            <div className="bg-white p-8 rounded-2xl shadow-lg border-l-4 border-green-400">
              <h3 className="text-2xl font-bold text-gray-900 mb-4 flex items-center">
                <BookOpen className="h-6 w-6 text-green-600 mr-2" />
                ржорж╛ржзрзНржпржорж┐ржХ (рзмрж╖рзНржа - рззрзжржо рж╢рзНрж░рзЗржгрзА)
              </h3>
              <div className="space-y-3 mb-6">
                <div className="flex items-center space-x-2">
                  <CheckCircle className="h-4 w-4 text-green-500" />
                  <span>ржЧржгрж┐ржд ржУ ржмрж┐ржЬрзНржЮрж╛ржирзЗ ржмрж┐рж╢рзЗрж╖ ржЧрзБрж░рзБрждрзНржм</span>
                </div>
                <div className="flex items-center space-x-2">
                  <CheckCircle className="h-4 w-4 text-green-500" />
                  <span>JSC ржУ SSC ржкрж░рзАржХрзНрж╖рж╛рж░ ржкрзНрж░рж╕рзНрждрзБрждрж┐</span>
                </div>
                <div className="flex items-center space-x-2">
                  <CheckCircle className="h-4 w-4 text-green-500" />
                  <span>рж╕рж╛ржкрзНрждрж╛рж╣рж┐ржХ ржкрж░рзАржХрзНрж╖рж╛ ржУ ржорзВрж▓рзНржпрж╛ржпрж╝ржи</span>
                </div>
                <div className="flex items-center space-x-2">
                  <CheckCircle className="h-4 w-4 text-green-500" />
                  <span>рж╣рзЛржоржУржпрж╝рж╛рж░рзНржХ ржУ ржкрзНрж░рзНржпрж╛ржХржЯрж┐рж╕ рж╢рж┐ржЯ</span>
                </div>
              </div>
              <div className="bg-green-50 p-4 rounded-lg">
                <p className="text-sm text-green-600">
                  <strong>ржХрзНрж▓рж╛рж╕рзЗрж░ рж╕ржоржпрж╝:</strong> рж╕ржХрж╛рж▓ рзоржЯрж╛ - ржмрж┐ржХрж╛рж▓ рзкржЯрж╛<br/>
                  <strong>ржмрзНржпрж╛ржЪ рж╕рж╛ржЗржЬ:</strong> рж╕рж░рзНржмрзЛржЪрзНржЪ рззрзл ржЬржи
                </p>
              </div>
            </div>

            {/* Intermediate Section */}
            <div className="bg-white p-8 rounded-2xl shadow-lg border-l-4 border-blue-500">
              <h3 className="text-2xl font-bold text-gray-900 mb-4 flex items-center">
                <Award className="h-6 w-6 text-blue-600 mr-2" />
                ржЙржЪрзНржЪ ржорж╛ржзрзНржпржорж┐ржХ (рззрззрж╢ - рззрзирж╢ рж╢рзНрж░рзЗржгрзА)
              </h3>
              <div className="space-y-3 mb-6">
                <div className="flex items-center space-x-2">
                  <CheckCircle className="h-4 w-4 text-blue-500" />
                  <span>ржмрж┐ржЬрзНржЮрж╛ржи ржмрж┐ржнрж╛ржЧрзЗрж░ рж╕ржХрж▓ ржмрж┐рж╖ржпрж╝</span>
                </div>
                <div className="flex items-center space-x-2">
                  <CheckCircle className="h-4 w-4 text-blue-500" />
                  <span>HSC ржкрж░рзАржХрзНрж╖рж╛рж░ ржмрж┐рж╢рзЗрж╖ ржкрзНрж░рж╕рзНрждрзБрждрж┐</span>
                </div>
                <div className="flex items-center space-x-2">
                  <CheckCircle className="h-4 w-4 text-blue-500" />
                  <span>ржмрж┐рж╢рзНржмржмрж┐ржжрзНржпрж╛рж▓ржпрж╝ ржнрж░рзНрждрж┐ ржкрж░рзАржХрзНрж╖рж╛рж░ ржЧрж╛ржЗржб</span>
                </div>
                <div className="flex items-center space-x-2">
                  <CheckCircle className="h-4 w-4 text-blue-500" />
                  <span>ржоржбрзЗрж▓ ржЯрзЗрж╕рзНржЯ ржУ ржкрзВрж░рзНржгрж╛ржЩрзНржЧ ржорзВрж▓рзНржпрж╛ржпрж╝ржи</span>
                </div>
              </div>
              <div className="bg-blue-50 p-4 rounded-lg">
                <p className="text-sm text-blue-700">
                  <strong>ржХрзНрж▓рж╛рж╕рзЗрж░ рж╕ржоржпрж╝:</strong> ржмрж┐ржХрж╛рж▓ рзйржЯрж╛ - рж░рж╛ржд рзоржЯрж╛<br/>
                  <strong>ржмрзНржпрж╛ржЪ рж╕рж╛ржЗржЬ:</strong> рж╕рж░рзНржмрзЛржЪрзНржЪ рззрзи ржЬржи
                </p>
              </div>
            </div>
          </div>

          {/* Contact Section */}
          {/* <div className="bg-gradient-to-r from-slate-600 to-slate-700 p-8 rounded-2xl text-white text-center">
            <h3 className="text-2xl font-bold mb-4">ржнрж░рзНрждрж┐рж░ ржЬржирзНржп ржЖржЬржЗ ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рзБржи!</h3>
            <p className="text-slate-100 mb-6">
              рж╕рзАржорж┐ржд ржЖрж╕ржиред ржкрзНрж░рждрж┐ ржмрзНржпрж╛ржЪрзЗ ржорж╛рждрзНрж░ рззрзл ржЬржи рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзА ржирзЗржУржпрж╝рж╛ рж╣ржпрж╝ред
            </p>
            <Button 
              className="bg-white text-slate-600 hover:bg-gray-100 text-lg py-3 px-8"
              onClick={() => navigate('/login')}
            >
              ржПржЦржиржЗ ржнрж░рзНрждрж┐ рж╣ржи
            </Button>
          </div> */}

        </div>
      </section>      {/* Testimonials */}
      <section className="py-20 px-4 sm:px-6 lg:px-8 bg-white">
        <div className="max-w-7xl mx-auto">
          <div className="text-center mb-16">
            <h2 className="text-3xl sm:text-4xl font-bold text-gray-900 mb-4">
              ржЖржорж╛ржжрзЗрж░ рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзА ржУ ржЕржнрж┐ржнрж╛ржмржХрж░рж╛ ржХрзА ржмрж▓ржЫрзЗржи
            </h2>
            <p className="text-xl text-gray-600">
              ржорзАрж░рж╕рж░рж╛ржЗржпрж╝рзЗрж░ ржкрж░рж┐ржмрж╛рж░ржЧрзБрж▓рзЛрж░ ржЖрж╕рзНржерж╛рж░ ржЬрж╛ржпрж╝ржЧрж╛
            </p>
          </div>
          
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            {testimonials.map((testimonial, index) => (
              <Card key={index} className="p-6">
                <p className="text-gray-600 mb-4 italic">
                  "{testimonial.content}"
                </p>
                <div>
                  <p className="font-semibold text-gray-900">{testimonial.name}</p>
                  <p className="text-sm text-gray-500">{testimonial.role}</p>
                </div>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="py-20 px-4 sm:px-6 lg:px-8 bg-slate-600">
        <div className="max-w-4xl mx-auto text-center">
          <h2 className="text-3xl sm:text-4xl font-bold text-white mb-4">
            ржЖржкржирж╛рж░ рж╕ржирзНрждрж╛ржирзЗрж░ ржЙржЬрзНржЬрзНржмрж▓ ржнржмрж┐рж╖рзНржпрзО ржЧржбрж╝рзБржи
          </h2>
          <p className="text-xl text-slate-200 mb-8">
            ржорзАрж░рж╕рж░рж╛ржЗржпрж╝рзЗрж░ рж╕рзЗрж░рж╛ ржХрзЛржЪрж┐ржВ рж╕рзЗржирзНржЯрж╛рж░рзЗ ржЖржЬржЗ ржнрж░рзНрждрж┐ ржХрж░рж╛ржи
          </p>
          <div className="bg-white/10 backdrop-blur-sm rounded-lg p-6 mb-8 max-w-2xl mx-auto">
            <p className="text-white font-semibold mb-2">ржпрзЛржЧрж╛ржпрзЛржЧ:</p>
            <p className="text-slate-200">ЁЯУН ржорзАрж░рж╕рж░рж╛ржЗ ржмрж╛ржЬрж╛рж░, ржЪржЯрзНржЯржЧрзНрж░рж╛ржо</p>
            <p className="text-slate-200">ЁЯУЮ рзжрззрзнxxxxxxxx</p>
            <p className="text-slate-200">ЁЯХТ рж░рзЛржЬ рж╕ржХрж╛рж▓ рзоржЯрж╛ - рж░рж╛ржд рзоржЯрж╛</p>
          </div>
          <Button 
            size="lg" 
            variant="outline"
            className="text-lg px-8 py-4 bg-white text-slate-600 hover:bg-gray-100"
            onClick={() => navigate('/admission')}
          >
            ржнрж░рзНрждрж┐рж░ ржлрж░рзНржо ржкрзВрж░ржг ржХрж░рзБржи
          </Button>
        </div>
      </section>

      {/* Footer */}
      <footer className="bg-gray-900 text-white py-12 px-4 sm:px-6 lg:px-8">
        <div className="max-w-7xl mx-auto">
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8 mb-8">
            <div className="text-center md:text-left">
              <div className="flex items-center justify-center md:justify-start space-x-2 mb-4">
                <GraduationCap className="h-8 w-8 text-slate-400" />
                <span className="text-xl font-bold">Science Point</span>
              </div>
              <p className="text-gray-400">
                ржорзАрж░рж╕рж░рж╛ржЗржпрж╝рзЗрж░ ржмрж┐рж╢рзНржмрж╕рзНржд ржХрзЛржЪрж┐ржВ рж╕рзЗржирзНржЯрж╛рж░<br/>
                рзмрж╖рзНржа ржерзЗржХрзЗ рззрзирж╢ рж╢рзНрж░рзЗржгрзАрж░ рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзАржжрзЗрж░ ржЬржирзНржп
              </p>
            </div>
            
            <div className="text-center">
              <h3 className="text-lg font-semibold mb-4 text-slate-400">ржпрзЛржЧрж╛ржпрзЛржЧ</h3>
              <p className="text-gray-400 text-sm">
                ЁЯУН ржорзАрж░рж╕рж░рж╛ржЗ ржмрж╛ржЬрж╛рж░, ржЪржЯрзНржЯржЧрзНрж░рж╛ржо<br/>
                ЁЯУЮ рзжрззрзнxxxxxxxx<br/>
                тЬЙя╕П info@sciencepoint.bd<br/>
                ЁЯХТ рж░рзЛржЬ рж╕ржХрж╛рж▓ рзоржЯрж╛ - рж░рж╛ржд рзоржЯрж╛
              </p>
            </div>

            <div className="text-center md:text-right">
              <h3 className="text-lg font-semibold mb-4 text-slate-400">ржХрзЛрж░рзНрж╕ рж╕ржорзВрж╣</h3>
              <p className="text-gray-400 text-sm">
                рзмрж╖рзНржа - рззрзжржо рж╢рзНрж░рзЗржгрзА (ржорж╛ржзрзНржпржорж┐ржХ)<br/>
                рззрззрж╢ - рззрзирж╢ рж╢рзНрж░рзЗржгрзА (ржЙржЪрзНржЪ ржорж╛ржзрзНржпржорж┐ржХ)<br/>
                ржЧржгрж┐ржд ржУ ржмрж┐ржЬрзНржЮрж╛ржирзЗ ржмрж┐рж╢рзЗрж╖рждрзНржм<br/>
                ржмрзЛрж░рзНржб ржкрж░рзАржХрзНрж╖рж╛рж░ ржкрзНрж░рж╕рзНрждрзБрждрж┐
              </p>
            </div>
          </div>
          
          <div className="border-t border-gray-700 pt-6 text-center">
            <div className="flex flex-col sm:flex-row justify-between items-center gap-4">
              <p className="text-gray-500 text-sm">
                ┬й рзирзжрзирзк рж╕рж╛ржпрж╝рзЗржирзНрж╕ ржкржпрж╝рзЗржирзНржЯ ржХрзЛржЪрж┐ржВ рж╕рзЗржирзНржЯрж╛рж░ред рж╕ржХрж▓ ржЕржзрж┐ржХрж╛рж░ рж╕ржВрж░ржХрзНрж╖рж┐рждред
              </p>
              <div className="flex items-center gap-4">
                <button
                  onClick={() => navigate('/developer')}
                  className="text-blue-400 hover:text-blue-300 transition-colors text-sm font-medium flex items-center gap-1"
                >
                  ЁЯСитАНЁЯТ╗ Meet the Developer
                </button>
                <span className="text-gray-600 text-sm">Built with тЭдя╕П by Abdullah Al Noman</span>
              </div>
            </div>
          </div>
        </div>
      </footer>
      </div>
    </>
  )
}

export default LandingPage